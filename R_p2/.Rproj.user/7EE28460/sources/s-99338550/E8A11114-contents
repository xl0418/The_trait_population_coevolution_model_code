set.seed(3000)
xseq<-seq(-4,4,.01)
densities<-dnorm(xseq, 0.5,4)


par(mfrow=c(1,1), mar=c(3,4,4,2))

plot(xseq, densities, col="darkgreen",xlab="", ylab="Density",
     type="l",lwd=2, cex=2, main="PDF of Standard Normal", cex.axis=.8,
     xlim = c(0,1))

y1 = function(x){
  y = 2e-4*x*exp(-2e-4*x^2)
  return(y)
}
y2 = function(x){
  y = 0.5*x*exp(-0.5*x^2)
  return(y)
}
curve(y1,-1000,1000)
curve(y2,0,10)


# Men's heights are normally distributed with a population mean of 69.0 inches
# and a population standard deviation of 2.8 inches

population_mean <- 0.5
population_sd <- 10
sd_to_fill <- 1
lower_bound <- population_mean - population_sd * sd_to_fill
upper_bound <- population_mean + population_sd * sd_to_fill

# Generates equally spaced values within 4 standard deviations of the mean
# This is used to connect the points on the curve so the more points the better
x <- seq(0, 1, length = 1000) 

y <- dnorm(x, population_mean, population_sd)

# Generate the plot, where:
# - type: the type of plot to be drawn where "n" means do not plot the points
# - xlab: the title of the x axis
# - ylab: the title of the y axis
# - main: the overall title for the plot
# - axes: when false it suppresses the axis automatically generated by the high level plotting function so that we can create custom axis
plot(x, y, type="n", xlab = "", ylab = "", main = "",ylim = c(0,1) )
lines(x, y)


f <- function(x,y){exp(-x*y^2)}
x <- seq(0,1,.05)
y <- seq(0,10,.5)
m <- length(x)
n <- length(y)
z <- matrix(0, nrow=m, ncol=n)
for(i in 1:m)for(j in 1:n)z[i,j] <- f(x[i],y[j])
persp(x,y,z,theta=120, phi=30, expand=0.5,
      col="lightblue", zlab="Competition",xlab = 'a',ylab = 'Trait diff',
      ticktype="detailed",
      shade=.75, lphi=45, ltheta=90)

library(rgl)
open3d()
bg3d("white")
surface3d(x, y, z, col="lightgreen")
aspect3d(1,1,0.5)
bbox3d(back="lines")
